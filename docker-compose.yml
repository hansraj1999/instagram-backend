  
version: "3.9"

services:
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - app-network
    environment:
      PYTHONUNBUFFERED: 1
      TYPE: SERVER
    

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      - mysql
      - kafka
    networks:
      - app-network
    environment:
      PYTHONUNBUFFERED: 1
      TYPE: CONSUMER
      TASK: POST_PROCESSOR

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9093"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_PORT: 9093
      KAFKA_LISTENER_INTERFACE: 0.0.0.0
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    networks:
      - app-network
  
  mysql:
    image: mysql:9.1.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: "kafka:9093"  # Kafka broker connection string
      SERVER_PORT: "9000"  # Kafdrop UI port
    ports:
      - "9000:9000"  # Expose Kafdrop on port 9000
    depends_on:
      - kafka
    networks:
      - app-network

volumes:
  mysql_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
